package com.springboot.restapi.Udemy.controller;

import com.springboot.restapi.Udemy.payload.PostDto;
import com.springboot.restapi.Udemy.service.PostService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/posts")
public class PostController {

    private PostService postService;

    @Autowired
    public PostController(PostService postService) {
        this.postService = postService;
    }

    //create blog post rest api
    @PostMapping
    public Object createPost(@RequestBody PostDto postDto){
        return new ResponseEntity<>(postService.createPost(postDto), HttpStatus.CREATED);
    }

    //get all post rest api
    @GetMapping
    public Object getAllPosts(){
        return postService.getAllPosts();
    }

    //get post by id rest api
    @GetMapping("/{id}")
    public Object getPostsById(@PathVariable(name = "id") long id){
        return ResponseEntity.ok(postService.getPostsById(id));
    }

    //update post by id rest api
    @PutMapping("/{id}")
    public Object updatePostById(@RequestBody PostDto postDto, @PathVariable(name = "id") long id){
        PostDto postDto1 = postService.updatePostById(postDto, id);
        return new ResponseEntity<>(postDto1, HttpStatus.OK);
    }

    @DeleteMapping("/{id}")
        public Object deletePostByID(@PathVariable(name = "id") long id){
            postService.deletePostById(id);
            return new ResponseEntity<>("Post entity deleted successfully.", HttpStatus.OK);
    }
}














































































































































































































































































































































































































